import logging
import utils

logging.basicConfig(level=logging.INFO)

skus = [
    "JLL00CB5NBK",
    "JLL00CB5NKA",
    "JLL00CB5NOT",
    "JLL00CD0SBK",
    "JLL00CD0SOV",
    "JLL00CJ1PBK",
    "JLL00CJ1PUM",
    "JSL00C40SBK",
    "JSL00C40VBK",
    "JSL00C40SUM",
    "JSL00C40VUM",
    "JLL00CE1SBK",
    "JLL00CE3SBK",
    "JLL00CE3SBN",
    "JLL00CE3SIV",
    "JLL00CE2SBK",
    "JLL00CE2SBN",
    "JLL00CE2SIV",
    "JLL00CE2NBK",
    "JLL00CE2NGR",
    "JCL00C0BMMG",
    "JCL00CE7MGN",
    "JCL00CE7MIV",
    "JCL00CE7MBU",
    "JCL00CE7MBE",
    "JLL00CC8SBK",
    "JLL00CC8QBE",
    "JLL00CC8QGN",
    "JLL00CC8SSM",
    "JLL00CC8SOV",
    "JLL00CC8NKA",
    "JLL00CC8URB",
    "JLL00CC8STP",
    "JLL00CH9NBK",
    "JLL00CH9NBA",
    "JSL00CI9SBK",
    "JSL00CI9SOT",
    "JLL00CC0SBK",
    "JLL00CC0SIV",
    "JLL00CC0PBK",
    "JLL00CC0PBO",
    "JLL00CC0SSM",
    "JLL00CC0SUM",
    "JLL00C06SBK",
    "JLL00C06SUM",
    "JLL00C06GUM",
    "JLL00CG2SBK",
    "JLL00CG2SYO",
    "JLL00CG4SBK",
    "JLL00CG4SBO",
    "JLL00CG4NBK",
    "JLL00CG4NOT",
    "JLL00CG4NUM",
    "JLL00CG4SUM",
    "JLL00CE0SBK",
    "JLL00CA1XBK",
    "JLL00CA1XBN",
    "JLL00CA1XCM",
    "JLL00CA1STP",
    "JLL00CJ33BK",
    "JLL00CJ33BN",
    "JLL00CH7GBK",
    "JLL00CH7GUM",
    "JLL00CC1SBK",
    "JLL00CC1SIV",
    "JLL00CC1FBK",
    "JLL00CC1FCT",
    "JLL00CC1NBK",
    "JLL00CC1SOV",
    "JLL00CG3SBK",
    "JLL00CG3SBO",
    "JLL00CG3SSM",
    "JLL00CG3SUM",
    "JLL00CG5SBK",
    "JLL00CG5SIV",
    "JLL00CG5NBK",
    "JLL00CG5NIV",
    "JLL00CG5NOT",
    "JLL00CG5SUM",
    "JLL00C65GBK",
    "JLL00C65GBO",
    "JLL00C65GIV",
    "JLL00C65GOT",
    "JLL00CF1XBE",
    "JLL00CF1XBK",
    "JLL00CF1XCM",
    "JLL00C66SBK",
    "JLL00C66SBD",
    "JLL00C66SBO",
    "JLL00C66SIV",
    "JLL00C66FBK",
    "JLL00C66NBK",
    "JLL00C66NUM",
    "JLL00C66SSM",
    "JLL00C66STP",
    "JLL00C66SUM",
    "JLL00CH0SBK",
    "JLL00CH0SBO",
    "JLL00CH0SIV",
    "JLL00CH0SSM",
    "JLL00C86UTP",
    "JLL00CC7SBK",
    "JLL00CC7SBO",
    "JLL00CC7SIV",
    "JLL00CC7FBK",
    "JLL00CC7FCT",
    "JLL00CC73BK",
    "JLL00CC7NBK",
    "JLL00CC7NIV",
    "JLL00CC7NOT",
    "JLL00CC7NUM",
    "JLL00CC7UBE",
    "JLL00CC7UCN",
    "JLL00CC7UUM",
    "JLL00CC7SUM",
    "JLL00CC7GBK",
    "JLL00CC7GBR",
    "JLL00CB0SBK",
    "JLL00CB0SSM",
    "JLL00CC4NBK",
    "JLL00CC4NSM",
    "JLL00CC4NGR",
    "JLL00CC4NMU",
    "JLL00CG6SBK",
    "JLL00CG6QBE",
    "JLL00CG6STP",
    "JLL00CI6QBE",
    "JLL00CA2XBE",
    "JLL00CA2XBK",
    "JLL00CA2XBN",
    "JLL00CA2XCM",
    "JLL00CA2XCH",
    "JLL00CA2FCT",
    "JLL00CA2FBK",
    "JLL00CA2UCN",
    "JLL00CA2UBE",
    "JLL00CA2STP",
    "JLL00CF3NBK",
    "JLL00CF3NMC",
    "JLL00CF3NMU",
    "JLL00CE4SBK",
    "JLL00CE4SSM",
    "JLL00CE4SIV",
    "JSL00CC9GBK",
    "JSL00CC9GIV",
    "JSL00CC9GOT",
    "JLL00CJ2SBK",
    "JLL00CJ2SOV",
    "JLL00CG7SUM",
    "JLL00CG8SBK",
    "JLL00CG8SBO",
    "JLL00CG8NBK",
    "JLL00CG8NOT",
    "JLL00CG8NUM",
    "JLL00CG8UCN",
    "JLL00CG8UUM",
    "JLL00CG8SUM",
    "JLL00CG8GBK",
    "JLL00CC6SBK",
    "JLL00CC6SBO",
    "JLL00CC6SIB",
    "JLL00CC6FBK",
    "JLL00CC6FCT",
    "JLL00CC63BK",
    "JLL00CC6NBE",
    "JLL00CC6NBK",
    "JLL00CC6NKA",
    "JLL00CC6NUM",
    "JLL00CC6UCN",
    "JLL00CC6UUM",
    "JLL00CC6SUM",
    "JLL00CC6GBK",
    "JLL00CC6GUM",
    "JLL00CG0SBK",
    "JLL00CG0SBO",
    "JLL00CG0SIV",
    "JLL00CG0SUM",
    "JSM00C0DMBE",
    "JSM00C0DMBK",
    "JSM00C0EMIV",
    "JSM00CE9MMC",
    "JCL00CF7MNV",
    "JCL00CF8MWH",
    "JLL00CC3NBK",
    "JLL00CC3NGR",
    "JLL00CC3NMU",
    "JLL00CC3NBE",
    "JLL00CC3NSU",
    "JLL00C37NBK",
    "JLL00C37NIV",
    "JLL00C37NOT",
    "JLL00C37NOV",
    "JLL00C37NUM",
    "JLL00C88XBN",
    "JSM00CF9MCL",
    "JSL00C57SBK",
    "JSL00C57VBK",
    "JSL00C57SUM",
    "JSL00C57VUM",
    "JSL00C41SBK",
    "JLL00CH8NBK",
    "JLL00CH8NBA",
    "JLL00CC5SBK",
    "JLL00CC5SBD",
    "JLL00CC5SBO",
    "JLL00CC5SIV",
    "JLL00CC5FBK",
    "JLL00CC5FCT",
    "JLL00CC5FIV",
    "JLL00CC5SOT",
    "JLL00CC5SUM",
    "JLL00CC2YBR",
    "JLL00CF2SBK",
    "JLL00CF2SBD",
    "JLL00CF2SBO",
    "JLL00CF2SIV",
    "JLL00CF2SUM",
]


client = utils.client("rohseoul")
for sku in skus:
    try:
        product_id = client.product_id_by_sku(sku, active_only=True)
        product = client.product_by_id(product_id)
        tags = product["tags"]
        tags += ["2025_summer_sale"]
        client.update_product_tags(product_id, ",".join(tags))
    except utils.MultipleVariantsFoundException as e:
        logging.error(f"{sku}: {e}")
